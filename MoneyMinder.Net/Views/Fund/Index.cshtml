@model IEnumerable<MoneyMinder.Net.Models.Fund>

@{
    ViewData["Title"] = "Fund";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
    <div class="col-md-6">
        <h2>@User.Identity.Name's Funds</h2>
    </div>
    <div class="col-md-6">
        <h3>Total : $@ViewBag.UserTotal</h3>
    </div>
</div>

<p>@Html.ActionLink("Create New Fund", "Create", "Fund")</p>

@if (Model.Any())
{
    @foreach (var listFund in Model)
    {
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="col-md-4">@Html.ActionLink(listFund.Name, "Details", new { id = listFund.FundId })</div>
                <div class="col-md-4">@Html.DisplayFor(modelFund => listFund.Total)</div>
                <div class="col-md-4">
                    @Html.ActionLink("Edit", "Edit", new { id = listFund.FundId })
                    @if (!(ViewBag.UserTransactionIds.Contains(listFund.FundId)))
                    {
                        <span> | </span> @Html.ActionLink("Delete", "Delete", new { id = listFund.FundId })
                    }
                </div>
            </div>
        </div>
    }

}
else
{
    <p>No funds have been added yet!</p>
}

@*var listData = JSON.parse('@Html.Raw(HttpUtility.HtmlDecode(ViewBag.fundNames))');*@

<script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/2.4.0/Chart.min.js"></script>

<center>
    <div style="width:400px;">
        <canvas id="myChart" width="100" height="100"></canvas>
    </div>
</center>

<canvas id="myChart" width="100" height="100"></canvas>
<script>

    @*var nameArray = @Html.Raw(Json.Encode(ViewBag.fundNames))*@
    var ctx = document.getElementById("myChart").getContext("2d");
    ctx.canvas.width = 200;
    ctx.canvas.height = 200;
    var myChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: ["Red", "Blue", "Yellow", "Green", "Purple", "Orange"],
            //labels: @Html.Raw(ViewBag.fundNames),
            datasets: [{
                label: '# of Votes',
                data: [12, 19, 3, 5, 2, 3],
                //data: @Html.Raw(ViewBag.fundTotals),
                backgroundColor: [
                    'rgba(255, 99, 132, 0.4)',
                    'rgba(54, 162, 235, 0.4)',
                    'rgba(255, 206, 86, 0.4)',
                    'rgba(75, 192, 192, 0.4)',
                    'rgba(153, 102, 255, 0.4)',
                    'rgba(255, 159, 64, 0.4)'
                ],
                borderColor: [
                    'rgba(255,99,132,1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            scales: {
                yAxes: [{
                    ticks: {
                        beginAtZero: true
                    }
                }]
            }
        }
    });
</script>